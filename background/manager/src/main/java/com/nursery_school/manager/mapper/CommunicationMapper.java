package com.nursery_school.manager.mapper;

import com.nursery_school.manager.model.Communication;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface CommunicationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_communication
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Delete({
        "delete from t_communication",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_communication
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Insert({
        "insert into t_communication (id, title, ",
        "content, create_date, ",
        "user_id, to_user_id)",
        "values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, ",
        "#{userId,jdbcType=VARCHAR}, #{toUserId,jdbcType=VARCHAR})"
    })
    int insert(Communication record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_communication
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Select({
        "select",
        "id, title, content, create_date, user_id, to_user_id",
        "from t_communication",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="to_user_id", property="toUserId", jdbcType=JdbcType.VARCHAR)
    })
    Communication selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_communication
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Select({
        "select",
        "id, title, content, create_date, user_id, to_user_id",
        "from t_communication"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="to_user_id", property="toUserId", jdbcType=JdbcType.VARCHAR)
    })
    List<Communication> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_communication
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Update({
        "update t_communication",
        "set title = #{title,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "to_user_id = #{toUserId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Communication record);
    
    @SelectProvider(type = com.nursery_school.manager.model.dyna.CommunicationDynaProvider.class, method = "selectProvider")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="to_user_id", property="toUserId", jdbcType=JdbcType.VARCHAR)
    })
    List<Communication> findByDyna(Map<String, Object> map);
    
    @UpdateProvider(type = com.nursery_school.manager.model.dyna.CommunicationDynaProvider.class, method = "updateProvider")
    void updateProvider(Map<String, Object> map);
}