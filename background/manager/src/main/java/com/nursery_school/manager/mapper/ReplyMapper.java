package com.nursery_school.manager.mapper;

import com.nursery_school.manager.model.Reply;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface ReplyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_reply
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Delete({
        "delete from t_reply",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_reply
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Insert({
        "insert into t_reply (id, communication_id, ",
        "to_user_id, send_user_id, ",
        "create_date, content)",
        "values (#{id,jdbcType=VARCHAR}, #{communicationId,jdbcType=VARCHAR}, ",
        "#{toUserId,jdbcType=VARCHAR}, #{sendUserId,jdbcType=VARCHAR}, ",
        "#{createDate,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR})"
    })
    int insert(Reply record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_reply
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Select({
        "select",
        "id, communication_id, to_user_id, send_user_id, create_date, content",
        "from t_reply",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="communication_id", property="communicationId", jdbcType=JdbcType.VARCHAR),
        @Result(column="to_user_id", property="toUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_user_id", property="sendUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR)
    })
    Reply selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_reply
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Select({
        "select",
        "id, communication_id, to_user_id, send_user_id, create_date, content",
        "from t_reply"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="communication_id", property="communicationId", jdbcType=JdbcType.VARCHAR),
        @Result(column="to_user_id", property="toUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_user_id", property="sendUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR)
    })
    List<Reply> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_reply
     *
     * @mbg.generated Thu Oct 03 17:33:18 CST 2019
     */
    @Update({
        "update t_reply",
        "set communication_id = #{communicationId,jdbcType=VARCHAR},",
          "to_user_id = #{toUserId,jdbcType=VARCHAR},",
          "send_user_id = #{sendUserId,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "content = #{content,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Reply record);
    
    @SelectProvider(type = com.nursery_school.manager.model.dyna.ReplyDynaProvider.class, method = "selectProvider")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="communication_id", property="communicationId", jdbcType=JdbcType.VARCHAR),
        @Result(column="to_user_id", property="toUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_user_id", property="sendUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR)
    })
    List<Reply> findByDyna(Map<String, Object> map);
    
    @UpdateProvider(type = com.nursery_school.manager.model.dyna.ReplyDynaProvider.class, method = "updateProvider")
    void updateProvider(Map<String, Object> map);
}