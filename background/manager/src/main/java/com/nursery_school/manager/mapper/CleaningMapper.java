package com.nursery_school.manager.mapper;

import com.nursery_school.manager.model.Cleaning;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface CleaningMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cleaning
     *
     * @mbg.generated Wed Oct 02 19:06:01 CST 2019
     */
    @Delete({
        "delete from t_cleaning",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cleaning
     *
     * @mbg.generated Wed Oct 02 19:06:01 CST 2019
     */
    @Insert({
        "insert into t_cleaning (id, site, ",
        "content, period, ",
        "standard, time)",
        "values (#{id,jdbcType=VARCHAR}, #{site,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{period,jdbcType=VARCHAR}, ",
        "#{standard,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR})"
    })
    int insert(Cleaning record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cleaning
     *
     * @mbg.generated Wed Oct 02 19:06:01 CST 2019
     */
    @Select({
        "select",
        "id, site, content, period, standard, time",
        "from t_cleaning",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="site", property="site", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="period", property="period", jdbcType=JdbcType.VARCHAR),
        @Result(column="standard", property="standard", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.VARCHAR)
    })
    Cleaning selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cleaning
     *
     * @mbg.generated Wed Oct 02 19:06:01 CST 2019
     */
    @Select({
        "select",
        "id, site, content, period, standard, time",
        "from t_cleaning"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="site", property="site", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="period", property="period", jdbcType=JdbcType.VARCHAR),
        @Result(column="standard", property="standard", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.VARCHAR)
    })
    List<Cleaning> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cleaning
     *
     * @mbg.generated Wed Oct 02 19:06:01 CST 2019
     */
    @Update({
        "update t_cleaning",
        "set site = #{site,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "period = #{period,jdbcType=VARCHAR},",
          "standard = #{standard,jdbcType=VARCHAR},",
          "time = #{time,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Cleaning record);
    
    @SelectProvider(type = com.nursery_school.manager.model.dyna.CleaningDynaProvider.class, method = "selectProvider")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="site", property="site", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="period", property="period", jdbcType=JdbcType.VARCHAR),
        @Result(column="standard", property="standard", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.VARCHAR)
    })
    List<Cleaning> findByDyna(Map<String, Object> map);
    
    @UpdateProvider(type = com.nursery_school.manager.model.dyna.CleaningDynaProvider.class, method = "updateProvider")
    void updateProvider(Map<String, Object> map);
}